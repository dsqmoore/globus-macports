# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

# $Id$

if {$build_arch == "x86_64" || $build_arch == "ppc64"} {
    set flavor gcc64pthr
} else {
    set flavor gcc32pthr
}

PortSystem              1.0

name                    globus-libtool
set _name               [ string map {"-" "_"} $name ]
version                 1.2
revision                1
platforms               darwin
categories              net
license                 Apache 2.0
maintainers             fysast.uu.se:mattias.ellert nbi.ku.dk:skou
homepage                http://www.globus.org/

description             Globus Toolkit - Globus libtool package
long_description        The Globus Toolkit is an open source software \
                        toolkit used for building Grid systems and \
                        applications. It is being developed by the \
                        Globus Alliance and many others all over the \
                        world. A growing number of projects and \
                        companies are using the Globus Toolkit to \
                        unlock the potential of grids for their \
                        cause. The ${name} package contains: \
                        Globus libtool package (virtual GPT glue package)

distfiles               ${name}-pkg_data_src.gpt.in

depends_run             port:libtool

depends_build           port:grid-packaging-tools \
                        port:globus-core \
                        port:libtool

extract {
    file mkdir ${worksrcpath}
    copy ${filespath}/${name}-pkg_data_src.gpt.in \
        ${worksrcpath}/pkg_data_src.gpt
}

configure {
    set LIBTOOL_VERSION [ exec glibtoolize --version | head -1 | sed "s!.* !!" ]

    reinplace "s!@LIBTOOL_VERSION@!${LIBTOOL_VERSION}!g" \
        ${worksrcpath}/pkg_data_src.gpt
}

build {
    system "echo /share/globus/packages/${_name}/${flavor}_rtl.filelist > \
        ${worksrcpath}/${flavor}_rtl.filelist"
    system "echo /share/globus/packages/${_name}/pkg_data_${flavor}_rtl.gpt >> \
        ${worksrcpath}/${flavor}_rtl.filelist"

    system "echo /share/globus/packages/${_name}/${flavor}_dev.filelist > \
        ${worksrcpath}/${flavor}_dev.filelist"
    system "echo /share/globus/packages/${_name}/pkg_data_${flavor}_dev.gpt >> \
        ${worksrcpath}/${flavor}_dev.filelist"

    system "cd ${worksrcpath} && ${prefix}/sbin/gpt_generate_bin_pkg_data \
        --flavor=${flavor} pkg_data_src.gpt"
}

destroot {
    set GLOBUSPACKAGEDIR ${destroot}${prefix}/share/globus/packages

    file mkdir ${GLOBUSPACKAGEDIR}/${_name}
    xinstall -m 644 ${worksrcpath}/pkg_data_${flavor}_rtl.gpt \
        ${worksrcpath}/${flavor}_rtl.filelist ${GLOBUSPACKAGEDIR}/${_name}
    xinstall -m 644 ${worksrcpath}/pkg_data_${flavor}_dev.gpt \
        ${worksrcpath}/${flavor}_dev.filelist ${GLOBUSPACKAGEDIR}/${_name}

    # Generate pkg-config file from GPT metadata
    file mkdir ${destroot}${prefix}/lib/pkgconfig
    system "${prefix}/share/globus/globus-gpt2pkg-config \
        ${worksrcpath}/pkg_data_${flavor}_dev.gpt ${prefix} > \
        ${destroot}${prefix}/lib/pkgconfig/${name}.pc"
}
