# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

# $Id$

if {$build_arch == "x86_64" || $build_arch == "ppc64"} {
    set flavor gcc64pthr
} else {
    set flavor gcc32pthr
}

PortSystem              1.0

name                    globus-gsi-cert-utils
set _name               [ string map {"-" "_"} $name ]
version                 6.5
revision                1
platforms               darwin
categories              net
license                 Apache 2.0
maintainers             fysast.uu.se:mattias.ellert nbi.ku.dk:skou
homepage                http://www.globus.org/

description             Globus Toolkit - Globus GSI Cert Utils Library
long_description        The Globus Toolkit is an open source software \
                        toolkit used for building Grid systems and \
                        applications. It is being developed by the \
                        Globus Alliance and many others all over the \
                        world. A growing number of projects and \
                        companies are using the Globus Toolkit to \
                        unlock the potential of grids for their \
                        cause. The ${name} package contains: \
                        Globus GSI Cert Utils Library

master_sites            http://www.globus.org/ftppub/gt5/5.2/5.2.2/packages/src/

distfiles               ${_name}-${version}.tar.gz

checksums               ${_name}-${version}.tar.gz \
                            md5 5a8726e6a6bf0a59c02335e149eb032d \
                            sha1 6c9c47c9bd1fe11e896abffe5c1e2f20f01fdedf \
                            rmd160 812cd3b429c922dc7e5d85212b3195765e96e5ad

patchfiles              ${name}-ca-setup.patch \
                        ${name}-oid.patch

depends_run             port:globus-common \
                        port:globus-gsi-openssl-error \
                        port:globus-openssl \
                        port:globus-openssl-module

depends_build           port:grid-packaging-tools \
                        port:globus-common \
                        port:globus-openssl-module \
                        port:globus-gsi-openssl-error \
                        port:globus-openssl \
                        port:globus-core \
                        bin:doxygen:doxygen \
                        bin:dot:graphviz \
                        bin:gs:ghostscript \
                        bin:pdflatex:texlive-latex

worksrcdir              ${_name}-${version}

patch.pre_args          -p1

configure.env-append    GPT_LOCATION=${prefix} \
                        GLOBUS_LOCATION=${prefix}

configure.post_args     --with-flavor=${flavor} --enable-doxygen

build.env-append        GPT_LOCATION=${prefix} \
                        GLOBUS_LOCATION=${prefix}

pre-configure {
    # Remove files that should be replaced during bootstrap
    eval file delete -force \
        [ glob -nocomplain ${worksrcpath}/doxygen/Doxyfile* ] dummy
    file delete -force ${worksrcpath}/doxygen/Makefile.am
    file delete -force ${worksrcpath}/pkgdata/Makefile.am
    eval file delete -force \
        [ glob -nocomplain ${worksrcpath}/globus_automake* ] dummy
    file delete -force ${worksrcpath}/autom4te.cache

    # Remove flavor tags
    foreach file [ exec find ${worksrcpath} -name Makefile.am ] {
        reinplace "s!^flavorinclude_HEADERS!include_HEADERS!" $file
        reinplace -E \
            "s!\(lib\[a-zA-Z_\]*\)_\\$\\(GLOBUS_FLAVOR_NAME\\)\\.la!\\1.la!g" \
            $file
        reinplace -E \
            "s!^\(lib\[a-zA-Z_\]*\)___GLOBUS_FLAVOR_NAME__la_!\\1_la_!" \
            $file
    }
    reinplace "s!<With_Flavors!<With_Flavors ColocateLibraries=\"no\"!" \
        ${worksrcpath}/pkgdata/pkg_data_src.gpt.in

    system "cd $worksrcpath && \
        GPT_LOCATION=${prefix} GLOBUS_LOCATION=${prefix} \
        ${prefix}/share/globus/globus-bootstrap.sh"
}

post-destroot {
    # Remove libtool archives (.la files)
    foreach file [ exec find ${destroot}/${prefix}/lib -name "lib*.la" ] {
        delete $file
    }

    # Remove static libraries (.a files)
    foreach file [ exec find ${destroot}/${prefix}/lib -name "lib*.a" ] {
        delete $file
    }

    # Generate pkg-config file from GPT metadata
    file mkdir ${destroot}${prefix}/lib/pkgconfig
    system "${prefix}/share/globus/globus-gpt2pkg-config \
        ${worksrcpath}/pkgdata/pkg_data_${flavor}_dev.gpt ${prefix} > \
        ${destroot}${prefix}/lib/pkgconfig/${name}.pc"

    # Move admin binary to sbin
    file mkdir ${destroot}${prefix}/sbin
    move ${destroot}${prefix}/bin/grid-default-ca \
        ${destroot}${prefix}/sbin/grid-default-ca
    reinplace "s!/bin/grid-default-ca!/sbin/grid-default-ca!" \
        ${destroot}${prefix}/share/globus/packages/${_name}/${flavor}_pgm.filelist

    # Move documentation to default macports location
    move ${destroot}${prefix}/share/doc/${_name} \
        ${destroot}${prefix}/share/doc/${name}-${version}

    # Install license file
    file mkdir ${destroot}${prefix}/share/doc/${name}-${version}
    xinstall -m 644 ${worksrcpath}/GLOBUS_LICENSE \
        ${destroot}${prefix}/share/doc/${name}-${version}
}
